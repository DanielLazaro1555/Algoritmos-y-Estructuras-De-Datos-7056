package principal;

import view.ConsoleView;

/**
 *
 * @author daniel
 */
/**
 * Un negocio necesita un sistema para gestionar su inventario de productos
 * electr칩nicos. Actualmente, manejan su inventario de manera manual, lo que
 * genera ineficiencias, errores en el control de stock y dificultades para
 * actualizar la informaci칩n de los productos.
 *
 * El nuevo sistema debe permitir: - Registrar productos - Consultar datos -
 * Actualizar informaci칩n - Eliminar productos de manera sencilla
 *
 * En las primeras etapas del desarrollo, el sistema trabajar치 con pilas (Stack)
 * para almacenar y gestionar los datos de los productos, siguiendo la
 * estructura LIFO (Last In, First Out). Posteriormente, se podr치 mejorar con
 * estructuras m치s avanzadas.
 *
 * 游늷 Cada producto tendr치 la siguiente informaci칩n: - Nombre: Cadena de texto
 * que identifica al producto (por ejemplo, "Laptop Dell"). - Precio: Valor
 * num칠rico que indica el costo del producto. - Cantidad en stock: N칰mero entero
 * que representa la cantidad disponible del producto.
 *
 * ======================== APLICACI칍N DEL SISTEMA: ======================== El
 * sistema debe realizar las siguientes operaciones con la pila:
 *
 * 游늷 Agregar un producto (push) - Insertar un nuevo producto en la pila,
 * verificando que no exceda la capacidad m치xima. - El 칰ltimo producto ingresado
 * ser치 el primero en ser eliminado.
 *
 * 游늷 Eliminar un producto (pop) - Retirar el producto que se encuentra en la
 * cima de la pila. - Si la pila est치 vac칤a, mostrar un mensaje de error.
 *
 * 游늷 Consultar el 칰ltimo producto agregado (peek) - Mostrar la informaci칩n del
 * producto en la cima sin eliminarlo.
 *
 * 游늷 Mostrar todo el inventario - Iterar sobre la pila y mostrar todos los
 * productos registrados, respetando el orden LIFO.
 *
 * 游늷 Copiar el inventario - Crear una copia exacta de la pila actual y mostrar
 * el resultado.
 *
 * ============================ FUNCIONALIDADES ADICIONALES:
 * ============================ 游늷 Validaci칩n de datos de entrada: - Asegurar
 * que los valores ingresados para precio y cantidad sean v치lidos. - Si el
 * usuario ingresa datos incorrectos, mostrar un mensaje de error y solicitar
 * nuevamente los datos.
 *
 * 游늷 Implementar un m칠todo de b칰squeda: - Permitir al usuario buscar un
 * producto por su nombre en la pila sin modificarla. - Indicar un mensaje si el
 * producto no se encuentra.
 *
 * 游늷 Ordenar el inventario por precio: - Implementar una funcionalidad para
 * ordenar los productos en la pila en funci칩n de su precio (de menor a mayor).
 * - Mostrar el inventario ordenado sin perder la estructura de la pila.
 *
 * 游늷 Ampliar la capacidad de la pila: - Simular el crecimiento del inventario
 * implementando un mecanismo para duplicar el tama침o de la pila cuando est칠
 * llena. - Copiar todos los elementos al nuevo arreglo.
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        ConsoleView consoleView = new ConsoleView();
        consoleView.showMenu(); // Iniciar el men칰 de la aplicaci칩n
    }

}
