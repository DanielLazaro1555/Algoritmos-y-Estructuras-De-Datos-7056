package model;

import clases.Solicitud;

/**
 *
 * @author daniel
 */
public class ColaSolicitudes {

    private Nodo frente; // Nodo que est√° al inicio de la cola
    private Nodo finalCola; // Nodo que est√° al final de la cola

    /**
     * Constructor de la cola de solicitudes. Inicialmente la cola est√° vac√≠a.
     */
    public ColaSolicitudes() {
        this.frente = null;
        this.finalCola = null;
    }

    /**
     * M√©todo para agregar una nueva solicitud a la cola.
     *
     * @param solicitud La solicitud que se agregar√° a la cola.
     */
    public void enqueue(Solicitud solicitud) {
        Nodo nuevoNodo = new Nodo(solicitud);
        if (isEmpty()) {
            frente = nuevoNodo;
            finalCola = nuevoNodo;
        } else {
            finalCola.setSiguiente(nuevoNodo);
            finalCola = nuevoNodo;
        }
        System.out.println("‚úÖ Solicitud agregada a la cola: " + solicitud);
    }

    /**
     * M√©todo para atender la solicitud en el frente de la cola.
     *
     * @return La solicitud atendida o null si la cola est√° vac√≠a.
     */
    public Solicitud dequeue() {
        if (isEmpty()) {
            System.out.println("‚ö† No hay solicitudes en la cola.");
            return null;
        }
        Solicitud solicitud = frente.getSolicitud();
        frente = frente.getSiguiente();
        if (frente == null) {
            finalCola = null; // Si la cola queda vac√≠a, finalCola tambi√©n debe ser null
        }
        System.out.println("üì§ Solicitud atendida: " + solicitud);
        return solicitud;
    }

    /**
     * M√©todo para verificar si la cola est√° vac√≠a.
     *
     * @return true si la cola est√° vac√≠a, false en caso contrario.
     */
    public boolean isEmpty() {
        return frente == null;
    }

    /**
     * M√©todo para mostrar todas las solicitudes en la cola.
     */
    public void mostrarCola() {
        if (isEmpty()) {
            System.out.println("üì≠ La cola est√° vac√≠a.");
            return;
        }
        System.out.println("üìå Solicitudes en la cola:");
        Nodo actual = frente;
        while (actual != null) {
            System.out.println("   üîπ " + actual.getSolicitud());
            actual = actual.getSiguiente();
        }
    }
}
